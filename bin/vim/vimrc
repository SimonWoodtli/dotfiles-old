"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" _    ___
" | |  / (_)___ ___  __________
" | | / / / __ `__ \/ ___/ ___/
" | |/ / / / / / / / /  / /__
" |___/_/_/ /_/ /_/_/   \___/
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

""""""""""""""""""""""""""""basic settings"""""""""""""""""""""""""""""""""""""
"" encoding
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8

set number relativenumber   "hybrid numbers
set ignorecase "ignore case of letters (easier to search)
let skip_defaults_vim=1
set nocompatible "allow vim-y things
set linebreak "this will wrap `` for long words even if new line is started
set noshowmatch "no more little pause if you type brackets
set foldmethod=manual " manual foldingdefault (zf/zd)
set nofoldenable "disable folding, when paragraphs can be minimized and maximized with spacebar
set ruler "ruler is on by default, just in case
"set scrolloff=999 "keep cursor in the middle, or some big other number
set scrolloff=7 "keep cursor at border of screen
set showcmd " shows info on bottom right
set icon "sync terminal title with current file edited
"set wrap linebreak nolist "soft wrap only wraps it but not formats it
set viminfo='20,<1000,s1000 "increase yank buffer size if you want to yank from one file to another
set wildmode=longest,list,full "autocompletion for ex commands with tabs
set hlsearch "all the /searchterms get highlighted on your display
"set nohlsearch "to turn the highligted searchterms off :noh
set incsearch "to loop through all the searched elements with `n/N`
set history=100 "memory management (x history (: history))
set hidden "stops complaining when switching from buffer with changes

"" all these are about indent:
set expandtab "if you don't like tabs
set tabstop=2 "settings for your notes and stuff, don't use to code with it
set softtabstop=2 "related to tabstop
set shiftwidth=2 "if you want lines to move in like with tabs `3>>` will move 3 lines in
set smartindent "same as >> but when you wanna do a new line
set autoindent " you should turn it off when you are pasting
set smarttab

"" no backups
set nobackup
set nowritebackup
set noswapfile

"" write good code
set colorcolumn=80
set textwidth=73
highlight ColorColumn ctermbg=0 guibg=lightgrey

"" makes your list characters prettier (set list)
set listchars=tab:→\ ,eol:↲,nbsp:␣,space:·,trail:·,extends:⟩,precedes:⟨
"" copy & past between 2 files
set viminfo='20,<1000,s1000 " prevents truncated yanks, deletes, etc.
"set viminfo=%,<800,'10,/50,:100,h,f0,n~/.vim/cache/.viminfo
"           | |    |   |   |    | |  + viminfo file path
"           | |    |   |   |    | + file marks 0-9,A-Z 0=NOT stored
"           | |    |   |   |    + disable 'hlsearch' loading viminfo
"           | |    |   |   + command-line history saved
"           | |    |   + search history saved
"           | |    + files marks saved
"           | + lines saved each register (old name for <, vi6.2)
"           + save/restore buffer list

""""""""""""""""""""""""""""low level settings"""""""""""""""""""""""""""""""""
set formatoptions-=t   " don't auto-wrap text using text width
set formatoptions+=c   " autowrap comments using textwidth with leader
set formatoptions-=r   " don't auto-insert comment leader on enter in insert
set formatoptions-=o   " don't auto-insert comment leader on o/O in normal
set formatoptions+=q   " allow formatting of comments with gq
set formatoptions-=w   " don't use trailing whitespace for paragraphs
set formatoptions-=a   " disable auto-formatting of paragraph changes
set formatoptions-=n   " don't recognized numbered lists
set formatoptions+=j   " delete comment prefix when joining
set formatoptions-=2   " don't use the indent of second paragraph line
set formatoptions-=v   " don't use broken 'vi-compatible auto-wrapping'
set formatoptions-=b   " don't use broken 'vi-compatible auto-wrapping'
set formatoptions+=l   " long lines not broken in insert mode
set formatoptions+=m   " multi-byte character line break support
set formatoptions+=M   " don't add space before or after multi-byte char
set formatoptions-=B   " don't add space between two multi-byte chars in join
set formatoptions+=1   " don't break a line after a one-letter word

""""""""""""""""""""""""""""""""nice feats"""""""""""""""""""""""""""""""""""""
"" Copy/Paste/Cut with system clipboard not just vim buffer
if has('unnamedplus')
  set clipboard=unnamed,unnamedplus
endif
"" Vmap for maintain Visual Mode after shifting > and <
vmap < <gv
vmap > >gv
"" Search mappings: These will make it so that going to the next one in a
"" search will center on the line it's found in.
nnoremap n nzzzv
nnoremap N Nzzzv

"" vertically center document when entering insert mode
autocmd InsertEnter * norm zz

"" get urlscan menu in vim
noremap <leader>u :w<Home>silent <End> !urlscan<CR>

" search and replace [foo] to [foo1] globally
nnoremap S :%s//gI<Left><Left><Left>

"" Map alternatives the <ESC> key (<C-[> already is)
inoremap jj <Esc>
cnoremap jj <Esc>
inoremap kk <Esc>
cnoremap kk <Esc>
inoremap kj <Esc>
cnoremap kj <Esc>

"" no arrow keys (vi muscle memory)
noremap <up> :echoerr "Umm, use k instead"<CR>
noremap <down> :echoerr "Umm, use j instead"<CR>
noremap <left> :echoerr "Umm, use h instead"<CR>
noremap <right> :echoerr "Umm, use l instead"<CR>
inoremap <up> <NOP>
inoremap <down> <NOP>
inoremap <left> <NOP>
inoremap <right> <NOP>

"" git
noremap <Leader>ga :Gwrite<CR>
noremap <Leader>gc :Gcommit<CR>
noremap <Leader>gsh :Gpush<CR>
noremap <Leader>gll :Gpull<CR>
noremap <Leader>gs !!git status<CR>
noremap <Leader>gb :Gblame<CR>
noremap <Leader>gd :Gvdiff<CR>
noremap <Leader>gr :Gremove<CR>

"" ctrlp ignores these files
let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']
"" no cache performance fix
let g:ctrlp_use_caching = 0

"""""""""""""""""""""""""""""""syntax mandatory""""""""""""""""""""""""""""""""
"" all settings require syntax on
syntax on
filetype plugin indent on "allow sensing the filetype

"""""""""""""""""""""""""""""""""""plugin""""""""""""""""""""""""""""""""""""""
if empty(glob('~/.vim/autoload/plug.vim')) " make sure plug is installed
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall
endif
"" look for .vim if it does not exist download&install plugins
if filereadable(expand("~/.vim/autoload/plug.vim"))
  call plug#begin('~/.vimplugins')
  Plug 'vim-pandoc/vim-pandoc'
  Plug 'https://gitlab.com/rwxrob/vim-pandoc-syntax-simple'
  Plug 'vim-airline/vim-airline' "info footer
  Plug 'vim-airline/vim-airline-themes'
  Plug 'preservim/nerdtree'
  Plug 'Xuyuanp/nerdtree-git-plugin'
  Plug 'ctrlpvim/ctrlp.vim' " C-p to search and open files within vim
  Plug 'tpope/vim-surround' "change single to double quotes: cs'\"
  Plug 'sheerun/vim-polyglot' " better syntax highlighting for many lang
  "Plug 'elzr/vim-json' "better syntax for json
  "Plug 'tpope/vim-fugitive'
  "Plug 'cespare/vim-toml'
  "Plug 'fatih/vim-go'
  "Plug 'PProvost/vim-ps1'

  "autocomplete
  "Plug 'neoclide/coc.nvim', {'branch': 'release'} "powerful autocomplete

  " tags
  "Plug 'xolox/vim-easytags' "Ctag automater
  Plug 'majutsushi/tagbar' "tags in memory

  "" colorschemes
  Plug 'morhetz/gruvbox' "color scheme
  Plug 'HerringtonDarkholme/yats.vim' " correct syntax hightlight for gruvbox
  "Plug 'tomasr/molokai' "color scheme
  "Plug 'flazz/vim-colorschemes' "lots of colorschemes

  " Javascript
  "Plug '/MaxMEllon/vim-jsx-pretty' "react syntax highlighting
  "Plug 'dense-analysis/ale' "JS linter :ALEToggle

  " C
  "Plug 'vim-scripts/c.vim', {'for': ['c', 'cpp']}
  "Plug 'ludwig/split-manpage.vim'

  " python
  "" Python Bundle
  "Plug 'davidhalter/jedi-vim'
  "Plug 'raimon49/requirements.txt.vim', {'for': 'requirements'}
  "Plug 'plytophogy/vim-virtualenv'
  " Plug 'python-mode/python-mode'

  " html
  Plug 'alvan/vim-closetag' "html close tags
  "Plug 'hail2u/vim-css3-syntax'
  "Plug 'gorodinskiy/vim-coloresque'
  "Plug 'tpope/vim-haml'
  "Plug 'mattn/emmet-vim'
  call plug#end()
  set nocompatible "needed for vim-polygot
  colorscheme gruvbox
  set background=dark
  let g:go_fmt_fail_silently = 0 " let me out even with errors
  let g:go_fmt_command = 'goimports' " autoupdate import
  let g:go_fmt_autosave = 1

  " coc autocomplete config
  " let g:coc_global_extensions = [
  " \ 'coc-snippets',
  " \ 'coc-tsserver',
  " \ 'coc-eslint',
  " \ 'coc-prettier',
  " \ 'coc-json',
  " \ ]
else
  autocmd vimleavepre *.go !gofmt -w % " backup if fatih fails
endif

autocmd vimleavepre *.md !perl -p -i -e 's,\[([^\]]+?)\]\(\),[\1](https://duck.com/lite?q=\1),g' %

"""""""""""""""""""""""""""""""""""buffer""""""""""""""""""""""""""""""""""""""
"" help you to detect filetypes that are not automatically detected
au bufnewfile,bufRead bashconfig set filetype=sh
au bufnewfile,bufRead *.profile set filetype=sh
au bufnewfile,bufRead *.crontab set filetype=crontab
au bufnewfile,bufRead *ssh/config set filetype=sshconfig
au bufnewfile,bufRead *gitconfig set filetype=gitconfig
au bufnewfile,bufRead /tmp/psql.edit.* set syntax=sql
au bufnewfile,bufRead *.muttrc set filetype=muttrc
"" start at last place you were editing
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
"normal! g'\"" | endif "remember where you were and puts you back to it
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe
"" Automatically delets all trailing whitespace on save.
autocmd BufWritePre * %s/\s\+$//e


"" might be needed for C-x/C-o autocomplete
"set omnifunc=javascriptcomplete#CompleteJS
"set omnifunc=htmlcomplete#CompleteTags
"set omnifunc=csscomplete#CompleteCSS
"set omnifunc=phpcomplete#CompletePHP


""""""""""""""""""""""""""""""leader, f-keys"""""""""""""""""""""""""""""""""""
let mapleader ="\<Space>"
"" needed for spacebar leader, to avoid character move with spacebar
nnoremap <SPACE> <Nop>
"" xclip copy/paste from X11 clipboard / ctrl-v select text first
vmap <Leader>yy :!xclip -f -sel clip<CR>
map <leader>pp mz: -1r !xclip -o -sel clip<CR>`z

map <F1> :set number! relativenumber!<CR>
nmap <F2> :call <SID>SynStack()<CR>
set pastetoggle=<F3> " toggle autoindent+autocomment on/off (:set paste, :set nopaste)
map <F4> :set list!<CR>
map <F5> :set cursorline! cursorcolumn!<CR>
map <F7> :set spell!<CR>
map <F8> :NERDTreeToggle<CR>
map <F12> :set fdm=indent<CR>
"nmap <silent> <F4> :TagbarToggle<CR>
"nmap <F4> :TagbarToggle<CR>
nmap <F9> :TagbarToggle<CR>
let g:tagbar_autofocus = 1


"" autocomplete
""double space to enter auto
inoremap <Leader><Leader> <C-x><C-o>
""C-n auto & navigate autocomplete-menu
inoremap <C-j> <C-n>
""navigate autocomplete-menu
inoremap <C-k> <C-p>

"" displays all the syntax rules for current position, useful
"" when writing vimscript syntax plugins (F2)
function! <SID>SynStack()
	if !exists("*synstack")
		return
	endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

"""""""""""""""""""""""""""""""""visual settings"""""""""""""""""""""""""""""""
set t_Co=256 " set  256bit color mode
"" makes visual mode highlighting blue
highlight Visual cterm=bold ctermbg=Blue ctermfg=NONE
"" visual effect on F5 cursor line changed to underline
hi clear CursorLine
highlight CursorLine ctermbg=Yellow guibg=#2b2b2b
highlight CursorColumn ctermbg=Yellow guibg=#2b2b2b

"" makes github colorschemes transparent - needs to be after Plugin stuff
hi Normal ctermbg=NONE
hi! NonText ctermbg=NONE guibg=NONE
hi! Normal ctermbg=NONE guibg=NONE

""""""""""""""""""""""""""""""""private settings"""""""""""""""""""""""""""""""
"" read personal/private vim configuration (keep last to override)
set rtp^=~/.vimpersonal
set rtp^=~/.vimprivate
