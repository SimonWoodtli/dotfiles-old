## vi-mode for shell
set -o vi

unalias -a
alias c=clear
alias ll="ls -la"
alias ??=stackexchange
alias mv="mv -n" # sets noclobber for mv so you don't delete file when moving them to existing place
alias top=htop
alias s=searx0
alias ?=duck
alias mupdf='mupdf -I'
alias emacs='emacs -nw'
alias mutt=neomutt
alias vlc='flatpak run org.videolan.VLC'
alias browsersync='browser-sync start --server --files "*.html, css/*.css"'
alias ls='ls -h --color=auto'
alias grep='grep -i --colour=auto'
alias egrep='egrep -i --colour=auto'
alias fgrep='fgrep -i --colour=auto'
alias doc='libreoffice'
alias ra='reddio | boxes -d dog | less'
alias rec='asciinema rec'
#alias com='complete -W "$(tldr 2>/dev/null --list)"'
alias spotify="LD_PRELOAD=/usr/local/lib/spotify-adblock.so flatpak run com.spotify.Client &"
alias surf="surf -F -z 1.5 duckduckgo.com & disown"
alias sudo='sudo '

## theme
theme gruvbox-original-dark-medium

## Git
## unintentionally pushed files to gitlab, 1. add to .gitignore 2. try
## `git rm -r` or `gri` to remove from entire commit history
alias gri='git ls-files --ignored --exclude-standard | xargs -0 git rm -r' # if $git rm -r is not enough
alias ga='git add'
alias gs='git status'
alias gpl='git pull'
alias gps='git push'
alias gc='git commit'
alias gg='git graph'
alias gd='git diff'
alias gsu='git stash && git pull && git stash pop'
alias gdl='git log --diff-filter=D --summary | grep delete'

export BROWSER=/usr/bin/lynx
export REPOS=$HOME/Repos
export DOWNLOADS=$HOME/Downloads
## used for `pdf` script
export PDFDIR=$HOME/Repos/gitlab.com/xnasero/books/work/essentials
export DISPLAY=:0
complete -C pdf pdf ## needed to make pdf script work
VERSION=v12.18.1
DISTRO=linux-x64
export PATH=/usr/local/lib/nodejs/node-$VERSION-/bin:$PATH
## define GITUSER
havecmd git && export GITUSER="$(git config --global user.name)"
## export PATH
## be sure NOT to add ./ cuz it's unsafe
export PATH=\
$REPOS/gitlab.com/$GITUSER/dotfiles/scripts:\
$REPOS/gitlab.com/$GITUSER/dotfiles/scripts_private:\
$HOME/.local/bin:\
$HOME/.local/go/bin:\
$HOME/.cargo/bin:\
$HOME/.node/bin:\
$HOME/.deno/bin:\
/usr/local/opt/coreutils/libexec/gnubin:\
/usr/local/go/bin:\
/usr/local/tinygo/bin:\
/usr/local/bin:\
/usr/local/sbin:\
/usr/games:\
/usr/sbin:\
/usr/bin:\
/snap/bin:\
/sbin:\
/bin
## stops python from producing annoying cache files
export PYTHONDONTWRITEBYTECODE=1
## Ignore duplicates in command history
export HISTCONTROL=ignoredups
## increase default 500 commands to 1000 in history
export HISTSIZE=1000

## CD into anywhere!
## be sure not to remove ./ or stuff gets weird
export CDPATH=\
./:\
$REPOS/gitlab.com/$GITUSER:\
$REPOS/github.com/$GITUSER:\
$REPOS/gitlab.com/$GITUSER/dotfiles:\
$REPOS/gitlab.com/$GITUSER/pdfs:\
$REPOS/gitlab.com/$GITUSER/notes:\
$REPOS/gitlab.com/*:\
$REPOS/github.com/*:\
$REPOS/gitlab.com:\
$REPOS/github.com:\
$REPOS:\
/media/$USER:\
$HOME

## Dircolors from Rob
if havecmd dircolors; then
  if [ -r ~/.dircolors ]; then
    eval "$(dircolors -b ~/.dircolors)"
  else
    eval "$(dircolors -b)"
  fi
fi

alias lsplain='ls -h --color=never'
alias ls='ls -h --color=auto'
alias lx='ls -AlXB'    #  Sort by extension.
alias lxr='ls -ARlXB'  #  Sort by extension.
alias lk='ls -AlSr'    #  Sort by size, biggest last.
alias lkr='ls -ARlSr'  #  Sort by size, biggest last.
alias lt='ls -Altr'    #  Sort by date, most recent last.
alias ltr='ls -ARltr'  #  Sort by date, most recent last.
alias lc='ls -Altcr'   #  Sort by change time, most recent last.
alias lcr='ls -ARltcr' #  Sort by change time, most recent last.
alias lu='ls -Altur'   #  Sort by access time, most recent last.
alias lur='ls -ARltur' #  Sort by access time, most recent last.
alias ll='ls -Alhv'    #  A better long listing.
alias llr='ls -ARlhv'  #  Recursive long listing.
alias lr='ll -AR'      #  Recursive simple ls.
alias lm='ls |more'    #  Pipe through 'more'
alias lmr='lr |more'   #  Pipe through 'more'

## CMD-prompt colors
export glypharrow=$'\ue0b0'
export glyphflames=$'\ue0c0'
export glyphrounded=$'\ue0b4'
export glyphbits=$'\ue0c6'
export glyphhex=$'\ue0cc'

export PS1w=$'\033[38;5;33m'
export PS1u=$'\033[38;2;0;165;0m'
export PS1a=$'\033[38;2;100;100;100m'
export PS1c=$'\033[38;2;110;110;110m'
export PS1h=$'\033[38;2;169;112;255m'
export PS1p=$'\033[38;2;218;165;32m'
export PS1P=$'\033[38;2;255;0;0m'
export PS1U=$PS1P

## emoji array
emojis=(🤖 👾 🤮 🤑 🤡 💩 👽 🥳 🤩 🤣 🤔 🖖 🙏 🧘 🛹 🛶 🥊 🎿 🎸  🤹  🐶 🐹 🐰 🦊 🐻 🐼 🐨 🐯 🦁
🐷 🐸 🐔 🐧 🐄 🦘 🦭  🦉  🦊 🐻  🦦 🦥 🦩 🐋 🐬 🐡 🐝 🌱 🦀 🦙 🦒 🐑 🐣 🦖 🦬  🦝 🦨 🐉 🦤  🍄 🐁 🦫  🍁 🐙 🦑 🐞 🪰 🐌  🐛 🦄 🐍 🐢 🐇 🦧 🦓 🦣 🐓 🌈 🥑 🥦 🍎 🥝 🍍 🍣)


## emoji function to grab and print random emoji
emoji() {
  grabEmoji=${emojis[$RANDOM % ${#emojis[@]}]};
  echo $grabEmoji;
}

if [[ $EUID == 0 ]]; then
  export PS1='\[$PS1U\]\u\[$PS1a\]@\[$PS1h\]\h\[$PS1c\]:\[$PS1w\]\w\[$PS1P\]#\[\033[00m\] '
else
  export PS1='\[$PS1u\]\u\[$PS1a\]@\[$PS1h\]\h\[$PS1c\]:\[$PS1w\]\w\[$PS1p\]$\[\033[00m\] '
fi
## IBUS/FCITX Config for chinese pinyin input either use fcitx or ibus
export GTK_IM_MODULE=IBUS
export XMODIFIERS=@im=IBUS
export QT_IM_MODULE=IBUS

## open executable file wherever it is with "vic"
vic () {
  vi $(which $1);
}

## vim to vi alias
which vim &>/dev/null && alias vi=vim
## glovestar (ls **filename includes subdirectories)
shopt -s globstar
## dotglob (the star (*) by default ignores the dot, with this setting the dot gets listed)
shopt -s dotglob

## no more `sudo ...` just `please ...` if you forgot sudo you can just
## run `please` or just run `sudo !!` as a default bash option
please() {
	if [ "$1" ]; then
		sudo $@
	else
		sudo "$BASH" -c "$(history -p !!)"
	fi
}

## list all current files in git repo by size
glist() {
  git rev-list --objects --all \
| git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' \
| awk '/^blob/ {print substr($0,6)}' \
| sort --numeric-sort --key=2 \
| cut --complement --characters=13-40 \
| numfmt --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest
}

## 1. run `gdl` list path of all deleted files
## 2. `gshowdl` -> list all commits that have a deleted file, $1=<path-to-deleted-file>
## 3. `git show <commit-id> -- <path-to-deleted-file>` -> for details
gshowdl() {
  git log --all -- "$1"
}

rc() {
  reddio print comments/$1 | less
}

rtm() {
  reddio print -l 10 -t month r/$1/top | boxes -d dog | less
}
rtw() {
  reddio print -l 10 -t week r/$1/top | boxes -d dog | less
}

rn() {
  reddio print -l 10 r/$1 | boxes -d dog | less
}

htmlcheck() {
  html5validator --root --show-warnings $3
}

csscheck() {
  html5validator --root --show-warnings $1 --skip-non-css
}

template() {
  git clone git@gitlab.com:xnasero-private/www-template.git $1 && cd $_
  rm -rf .git
}

## man pages nice colors
man() {
    env \
    LESS_TERMCAP_mb="$(printf "\e[1;31m")" \
    LESS_TERMCAP_md="$(printf "\e[1;31m")" \
    LESS_TERMCAP_me="$(printf "\e[0m")" \
    LESS_TERMCAP_se="$(printf "\e[0m")" \
    LESS_TERMCAP_so="$(printf "\e[1;44;33m")" \
    LESS_TERMCAP_ue="$(printf "\e[0m")" \
    LESS_TERMCAP_us="$(printf "\e[1;32m")" \
    man "${@}"
}

## tldr nice colors
export TLDR_HEADER='magenta bold underline'
export TLDR_QUOTE='italic'
export TLDR_DESCRIPTION='default'
export TLDR_CODE='red'
export TLDR_PARAM='blue'

## Detection of major operating systems.
[ -z "$OS" ] && export OS=`uname`
case "$OS" in
  Linux)          export PLATFORM=linux ;;
  *indows*)       export PLATFORM=windows ;;
  FreeBSD|Darwin) export PLATFORM=mac ;;
  *)              export PLATFORM=unknown ;;
esac


export EDITOR=vim
export VISUAL=vim
export EDITOR_PREFIX=vim
